version: '3.9'
services:
  core:
    build:
      context: ./services/core
      dockerfile: Dockerfile
    env_file:
      - ./services/core/.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: bframe
      POSTGRES_PASSWORD: bframe
      POSTGRES_DB: bframe
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bframe"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_BASE=http://core:8000
    ports:
      - "3000:3000"
    depends_on:
      - core

volumes:
  pgdata: {}
